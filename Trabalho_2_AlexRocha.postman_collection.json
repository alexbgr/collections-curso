{
	"info": {
		"_postman_id": "b51f7fba-74e3-411d-ba11-4694b2b9f075",
		"name": "Trabalho 2 - Alex Rocha",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Automatizado-Tests",
			"item": [
				{
					"name": "GET  User",
					"item": [
						{
							"name": "CT001-Buscar todos os usuários",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											"",
											"pm.test(\"Body response\", function (){ ",
											"    var jsonData = pm.response.json();",
											"   //laço comando .each",
											"    _.each(jsonData, (item) => { //verificando se todos os retornos tem os campos abaixo",
											"        pm.expect(item).to.have.property(\"id\");",
											"        pm.expect(item).to.have.property(\"name\");",
											"        pm.expect(item).to.have.property(\"email\");",
											"        pm.expect(item).to.have.property(\"gender\");",
											"        pm.expect(item).to.have.property(\"status\");",
											"    })",
											"        //usar valores do retorno em outro teste",
											"        pm.collectionVariables.set(\"valor_id\", jsonData[1].id);",
											"        pm.collectionVariables.set(\"valor_name\", jsonData[1].name);",
											"        pm.collectionVariables.set(\"valor_email\", jsonData[1].email);",
											"        pm.collectionVariables.set(\"valor_gender\", jsonData[1].gender);",
											"        pm.collectionVariables.set(\"valor_status\", jsonData[1].status);",
											"",
											"});",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/users",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"users"
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT002-Buscar um usuário específico - id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/users/{{valor_id}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"users",
										"{{valor_id}}"
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT003- Filtrar pelo nome",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/users?name={{valor_name}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"users"
									],
									"query": [
										{
											"key": "name",
											"value": "{{valor_name}}"
										},
										{
											"key": "email",
											"value": "",
											"disabled": true
										},
										{
											"key": "gender",
											"value": "",
											"disabled": true
										},
										{
											"key": "status",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Coluna Tests, usando automação"
							},
							"response": []
						},
						{
							"name": "CT004- Filtrar pelo email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/users?email={{valor_email}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"users"
									],
									"query": [
										{
											"key": "email",
											"value": "{{valor_email}}"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Coluna Tests, usando automação"
							},
							"response": []
						},
						{
							"name": "CT005- Filtrar pelo sexo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/users?gender={{valor_gender}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"users"
									],
									"query": [
										{
											"key": "gender",
											"value": "{{valor_gender}}"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Coluna Tests, usando automação"
							},
							"response": []
						},
						{
							"name": "CT006- Filtrar pela situação Status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/users?status={{valor_status}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"users"
									],
									"query": [
										{
											"key": "status",
											"value": "{{valor_status}}"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Coluna Tests, usando automação"
							},
							"response": []
						},
						{
							"name": "CT007- Filtrar pelo nome, e-mail, sexo e situação",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 50s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/users?name={{valor_name}}&email={{valor_email}}&gender={{valor_gender}}&status={{valor_status}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"users"
									],
									"query": [
										{
											"key": "name",
											"value": "{{valor_name}}"
										},
										{
											"key": "email",
											"value": "{{valor_email}}"
										},
										{
											"key": "gender",
											"value": "{{valor_gender}}"
										},
										{
											"key": "status",
											"value": "{{valor_status}}"
										}
									]
								},
								"description": "Coluna Tests, usando automação"
							},
							"response": []
						},
						{
							"name": "CT008- Filtrar pelo nome e e-mail",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/users?name={{valor_name}}&email={{valor_email}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"users"
									],
									"query": [
										{
											"key": "name",
											"value": "{{valor_name}}"
										},
										{
											"key": "email",
											"value": "{{valor_email}}"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "status",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Coluna Tests, usando automação"
							},
							"response": []
						},
						{
							"name": "CT009- Filtrar pelo nome e sexo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/users?name={{valor_name}}&gender={{valor_gender}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"users"
									],
									"query": [
										{
											"key": "name",
											"value": "{{valor_name}}"
										},
										{
											"key": "gender",
											"value": "{{valor_gender}}"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Coluna Tests, usando automação"
							},
							"response": []
						},
						{
							"name": "CT010- Filtrar pelo nome e situação",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/users?name={{valor_name}}&status={{valor_status}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"users"
									],
									"query": [
										{
											"key": "name",
											"value": "{{valor_name}}"
										},
										{
											"key": "status",
											"value": "{{valor_status}}"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Coluna Tests, usando automação"
							},
							"response": []
						},
						{
							"name": "CT011- Filtrar pelo e-mail e sexo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/users?email={{valor_email}}&gender={{valor_gender}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"users"
									],
									"query": [
										{
											"key": "email",
											"value": "{{valor_email}}"
										},
										{
											"key": "gender",
											"value": "{{valor_gender}}"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Coluna Tests, usando automação"
							},
							"response": []
						},
						{
							"name": "CT012- Filtrar pelo e-mail e situação",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/users?email={{valor_email}}&status={{valor_status}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"users"
									],
									"query": [
										{
											"key": "email",
											"value": "{{valor_email}}"
										},
										{
											"key": "status",
											"value": "{{valor_status}}"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Coluna Tests, usando automação"
							},
							"response": []
						},
						{
							"name": "CT013- Filtrar pelo sexo e situação",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/users?gender={{valor_gender}}&status={{valor_status}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"users"
									],
									"query": [
										{
											"key": "gender",
											"value": "{{valor_gender}}"
										},
										{
											"key": "status",
											"value": "{{valor_status}}"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Coluna Tests, usando automação"
							},
							"response": []
						},
						{
							"name": "CT014- Buscar um usuário que não existe pelo id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/users/9999  vv",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"users",
										"9999  vv"
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Coluna Tests, usando automação"
							},
							"response": []
						},
						{
							"name": "CT014.01- Buscar um usuário que não existe pelo id com letra",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/users/9999 a",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"users",
										"9999 a"
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Coluna Tests, usando automação"
							},
							"response": []
						},
						{
							"name": "CT014.02- Buscar um usuário que não existe pelo id numero valido e letra com espaço Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 5000s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/users/9999",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"users",
										"9999"
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Coluna Tests, usando automação"
							},
							"response": []
						},
						{
							"name": "CT015- Buscar um usuário por um id inválido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/users/9999",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"users",
										"9999"
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Coluna Tests, usando automação"
							},
							"response": []
						},
						{
							"name": "CT016- Buscar usuário por um nome inexistente",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{url_base}}/public/v2/users?name=Alex Rocha",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"users"
									],
									"query": [
										{
											"key": "name",
											"value": "Alex Rocha"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Coluna Tests, usando automação"
							},
							"response": []
						},
						{
							"name": "CT017- Buscar usuário por um email inexistente",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "",
										"type": "text",
										"value": "",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{url_base}}/public/v2/users?email=alex.rocha@gmail.com",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"users"
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "email",
											"value": "alex.rocha@gmail.com"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Coluna Tests, usando automação"
							},
							"response": []
						},
						{
							"name": "CT018- Buscar usuário por um sexo inválido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											"",
											"/*",
											"pm.test(\"Body response\", function (){ ",
											"    var jsonData = pm.response.json();",
											"   //laço comando .each",
											"    _.each(jsonData, (item) => { //verificando se todos os retornos tem os campos abaixo",
											"        pm.expect(item).to.have.property(\"id\");",
											"        pm.expect(item).to.have.property(\"name\");",
											"        pm.expect(item).to.have.property(\"email\");",
											"        pm.expect(item).to.have.property(\"gender\");",
											"        pm.expect(item).to.have.property(\"status\");",
											"    })",
											"        //usar valores do retorno em outro teste",
											"        pm.collectionVariables.set(\"valor_id\", jsonData[0].id);",
											"        pm.collectionVariables.set(\"valor_name\", jsonData[0].name);",
											"        pm.collectionVariables.set(\"valor_email\", jsonData[0].email);",
											"        pm.collectionVariables.set(\"valor_gender\", jsonData[0].gender);",
											"        pm.collectionVariables.set(\"valor_status\", jsonData[0].status);",
											"",
											"});",
											"",
											"*/",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "",
										"type": "text",
										"value": "",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{url_base}}/public/v2/users?gender=outros",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"users"
									],
									"query": [
										{
											"key": "gender",
											"value": "outros"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Coluna Tests, usando automação"
							},
							"response": []
						},
						{
							"name": "CT019- Buscar usuário por uma situação inválida",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "",
										"type": "text",
										"value": "",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{url_base}}/public/v2/users?status=Outros",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"users"
									],
									"query": [
										{
											"key": "status",
											"value": "Outros"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Coluna Tests, usando automação"
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "GET Post",
					"item": [
						{
							"name": "CT001 - Buscar todos os posts ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											"",
											"pm.test(\"Body response\", function (){ ",
											"    var jsonData = pm.response.json();",
											"   //laço comando .each",
											"    _.each(jsonData, (item) => { //verificando se todos os retornos tem os campos abaixo",
											"        pm.expect(item).to.have.property(\"id\");",
											"        pm.expect(item).to.have.property(\"user_id\");",
											"        pm.expect(item).to.have.property(\"title\");",
											"        pm.expect(item).to.have.property(\"body\");",
											"        //pm.expect(item).to.have.property(\"status\");",
											"    })",
											"        //usar valores do retorno em outro teste",
											"        pm.collectionVariables.set(\"v_id\", jsonData[1].id);",
											"        pm.collectionVariables.set(\"v_user_id\", jsonData[1].user_id);",
											"        pm.collectionVariables.set(\"v_title\", jsonData[1].title);",
											"        pm.collectionVariables.set(\"v_body\", jsonData[1].body);",
											"        //pm.collectionVariables.set(\"v_status\", jsonData[1].status);",
											"",
											"});",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/posts",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"posts"
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT002 - Buscar posts por Id específico",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/posts?user_id={{v_user_id}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"posts"
									],
									"query": [
										{
											"key": "user_id",
											"value": "{{v_user_id}}"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT003 - Filtrar post pelo user_id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/posts?user_id={{v_user_id}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"posts"
									],
									"query": [
										{
											"key": "user_id",
											"value": "{{v_user_id}}"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT004 - Filtra por title",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/posts?title={{v_title}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"posts"
									],
									"query": [
										{
											"key": "title",
											"value": "{{v_title}}"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT005 - Filtra por body",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/posts?title={{v_title}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"posts"
									],
									"query": [
										{
											"key": "title",
											"value": "{{v_title}}"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT006 - Filtra por Id, user_id e title",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/posts/?user_id={{v_user_id}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"posts",
										""
									],
									"query": [
										{
											"key": "user_id",
											"value": "{{v_user_id}}"
										},
										{
											"key": "title",
											"value": "{{v_title}}",
											"disabled": true
										},
										{
											"key": "body",
											"value": "{{v_body}}",
											"disabled": true
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT007 - Filtra por Id, user_id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/posts?user_id={{v_user_id}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"posts"
									],
									"query": [
										{
											"key": "user_id",
											"value": "{{v_user_id}}"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT008 - Filtra por Id e title",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/posts?user_id={{v_user_id}}&title={{v_title}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"posts"
									],
									"query": [
										{
											"key": "user_id",
											"value": "{{v_user_id}}"
										},
										{
											"key": "title",
											"value": "{{v_title}}"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT009 - Filtra por user_id e title",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/posts?user_id={{v_user_id}}&title={{v_title}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"posts"
									],
									"query": [
										{
											"key": "user_id",
											"value": "{{v_user_id}}"
										},
										{
											"key": "title",
											"value": "{{v_title}}"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT010 - Buscar um usuário que não existe pelo id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/posts/9999",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"posts",
										"9999"
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT010.01 - Buscar um usuário que não existe pelo id com letra",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/posts/aa99",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"posts",
										"aa99"
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT011 - Buscar por user_id inexistente",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/posts/?user_id=9999",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"posts",
										""
									],
									"query": [
										{
											"key": "user_id",
											"value": "9999"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT012 - Buscar por title inexistente",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/posts/?title=teste",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"posts",
										""
									],
									"query": [
										{
											"key": "title",
											"value": "teste"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT013 - Buscar por body inexistente",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/posts/?body=teste de body",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"posts",
										""
									],
									"query": [
										{
											"key": "body",
											"value": "teste de body"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						}
					]
				},
				{
					"name": "Get Comments",
					"item": [
						{
							"name": "CT001- Buscar todos os comments ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											"",
											"pm.test(\"Body response\", function (){ ",
											"    var jsonData = pm.response.json();",
											"   //laço comando .each",
											"    _.each(jsonData, (item) => { //verificando se todos os retornos tem os campos abaixo",
											"        pm.expect(item).to.have.property(\"id\");",
											"        pm.expect(item).to.have.property(\"post_id\");",
											"        pm.expect(item).to.have.property(\"name\");",
											"        pm.expect(item).to.have.property(\"email\");",
											"        pm.expect(item).to.have.property(\"body\");",
											"    })",
											"        //usar valores do retorno em outro teste",
											"        pm.collectionVariables.set(\"v1_id\", jsonData[1].id);",
											"        pm.collectionVariables.set(\"v2_post_id\", jsonData[1].post_id);",
											"        pm.collectionVariables.set(\"v3_name\", jsonData[1].name);",
											"        pm.collectionVariables.set(\"v4_email\", jsonData[1].email);",
											"        pm.collectionVariables.set(\"v5_body\", jsonData[1].body);",
											"",
											"});",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/comments",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"comments"
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT002- Buscar um comments específico id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											"",
											"pm.test(\"Body response\", function (){ ",
											"    var jsonData = pm.response.json();",
											"   //laço comando .each",
											"    _.each(jsonData, (item) => { //verificando se todos os retornos tem os campos abaixo",
											"        pm.expect(item).to.have.property(\"id\");",
											"        pm.expect(item).to.have.property(\"post_id\");",
											"        pm.expect(item).to.have.property(\"name\");",
											"        pm.expect(item).to.have.property(\"email\");",
											"        pm.expect(item).to.have.property(\"body\");",
											"    })",
											"        //usar valores do retorno em outro teste",
											"        pm.collectionVariables.set(\"v1_id\", jsonData[1].id);",
											"        pm.collectionVariables.set(\"v2_name\", jsonData[1].name);",
											"        pm.collectionVariables.set(\"v3_email\", jsonData[1].email);",
											"        pm.collectionVariables.set(\"v4_gender\", jsonData[1].gender);",
											"        pm.collectionVariables.set(\"v5_status\", jsonData[1].status);",
											"",
											"});",
											"*/",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/comments?id={{v1_id}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"comments"
									],
									"query": [
										{
											"key": "id",
											"value": "{{v1_id}}"
										},
										{
											"key": "post_id",
											"value": "{{v2_post_id}}",
											"disabled": true
										},
										{
											"key": "name",
											"value": "{{v3_name}}",
											"disabled": true
										},
										{
											"key": "email",
											"value": "{{v4_email}}",
											"disabled": true
										},
										{
											"key": "body",
											"value": "{{v5_body}}",
											"disabled": true
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT003- Buscar um comments post_id específico",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											"",
											"pm.test(\"Body response\", function (){ ",
											"    var jsonData = pm.response.json();",
											"   //laço comando .each",
											"    _.each(jsonData, (item) => { //verificando se todos os retornos tem os campos abaixo",
											"        pm.expect(item).to.have.property(\"id\");",
											"        pm.expect(item).to.have.property(\"post_id\");",
											"        pm.expect(item).to.have.property(\"name\");",
											"        pm.expect(item).to.have.property(\"email\");",
											"        pm.expect(item).to.have.property(\"body\");",
											"    })",
											"        //usar valores do retorno em outro teste",
											"        pm.collectionVariables.set(\"v1_id\", jsonData[1].id);",
											"        pm.collectionVariables.set(\"v2_name\", jsonData[1].name);",
											"        pm.collectionVariables.set(\"v3_email\", jsonData[1].email);",
											"        pm.collectionVariables.set(\"v4_gender\", jsonData[1].gender);",
											"        pm.collectionVariables.set(\"v5_status\", jsonData[1].status);",
											"",
											"});",
											"*/",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/comments?id={{v1_id}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"comments"
									],
									"query": [
										{
											"key": "id",
											"value": "{{v1_id}}"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT004- Buscar um comments por name especifico ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											"",
											"pm.test(\"Body response\", function (){ ",
											"    var jsonData = pm.response.json();",
											"   //laço comando .each",
											"    _.each(jsonData, (item) => { //verificando se todos os retornos tem os campos abaixo",
											"        pm.expect(item).to.have.property(\"id\");",
											"        pm.expect(item).to.have.property(\"post_id\");",
											"        pm.expect(item).to.have.property(\"name\");",
											"        pm.expect(item).to.have.property(\"email\");",
											"        pm.expect(item).to.have.property(\"body\");",
											"    })",
											"        //usar valores do retorno em outro teste",
											"        pm.collectionVariables.set(\"v1_id\", jsonData[1].id);",
											"        pm.collectionVariables.set(\"v2_name\", jsonData[1].name);",
											"        pm.collectionVariables.set(\"v3_email\", jsonData[1].email);",
											"        pm.collectionVariables.set(\"v4_gender\", jsonData[1].gender);",
											"        pm.collectionVariables.set(\"v5_status\", jsonData[1].status);",
											"",
											"});",
											"*/",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/comments?name={{v3_name}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"comments"
									],
									"query": [
										{
											"key": "name",
											"value": "{{v3_name}}"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT005- Buscar um comments por email especifico ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											"",
											"pm.test(\"Body response\", function (){ ",
											"    var jsonData = pm.response.json();",
											"   //laço comando .each",
											"    _.each(jsonData, (item) => { //verificando se todos os retornos tem os campos abaixo",
											"        pm.expect(item).to.have.property(\"id\");",
											"        pm.expect(item).to.have.property(\"post_id\");",
											"        pm.expect(item).to.have.property(\"name\");",
											"        pm.expect(item).to.have.property(\"email\");",
											"        pm.expect(item).to.have.property(\"body\");",
											"    })",
											"        //usar valores do retorno em outro teste",
											"        pm.collectionVariables.set(\"v1_id\", jsonData[1].id);",
											"        pm.collectionVariables.set(\"v2_name\", jsonData[1].name);",
											"        pm.collectionVariables.set(\"v3_email\", jsonData[1].email);",
											"        pm.collectionVariables.set(\"v4_gender\", jsonData[1].gender);",
											"        pm.collectionVariables.set(\"v5_status\", jsonData[1].status);",
											"",
											"});",
											"*/",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/comments?email={{v4_email}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"comments"
									],
									"query": [
										{
											"key": "id",
											"value": "{{v1_id}}",
											"disabled": true
										},
										{
											"key": "post_id",
											"value": "{{v2_post_id}}",
											"disabled": true
										},
										{
											"key": "name",
											"value": "{{v3_name}}",
											"disabled": true
										},
										{
											"key": "email",
											"value": "{{v4_email}}"
										},
										{
											"key": "body",
											"value": "{{v5_body}}",
											"disabled": true
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT006- Buscar um comments por body especifico ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											"",
											"pm.test(\"Body response\", function (){ ",
											"    var jsonData = pm.response.json();",
											"   //laço comando .each",
											"    _.each(jsonData, (item) => { //verificando se todos os retornos tem os campos abaixo",
											"        pm.expect(item).to.have.property(\"id\");",
											"        pm.expect(item).to.have.property(\"post_id\");",
											"        pm.expect(item).to.have.property(\"name\");",
											"        pm.expect(item).to.have.property(\"email\");",
											"        pm.expect(item).to.have.property(\"body\");",
											"    })",
											"        //usar valores do retorno em outro teste",
											"        pm.collectionVariables.set(\"v1_id\", jsonData[1].id);",
											"        pm.collectionVariables.set(\"v2_name\", jsonData[1].name);",
											"        pm.collectionVariables.set(\"v3_email\", jsonData[1].email);",
											"        pm.collectionVariables.set(\"v4_gender\", jsonData[1].gender);",
											"        pm.collectionVariables.set(\"v5_status\", jsonData[1].status);",
											"",
											"});",
											"*/",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/comments?id={{v1_id}}&body={{v5_body}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"comments"
									],
									"query": [
										{
											"key": "id",
											"value": "{{v1_id}}"
										},
										{
											"key": "post_id",
											"value": "{{v2_post_id}}",
											"disabled": true
										},
										{
											"key": "name",
											"value": "{{v3_name}}",
											"disabled": true
										},
										{
											"key": "email",
											"value": "{{v4_email}}",
											"disabled": true
										},
										{
											"key": "body",
											"value": "{{v5_body}}"
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT007- Buscar comments por id, post_id, name, email, body",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											"",
											"pm.test(\"Body response\", function (){ ",
											"    var jsonData = pm.response.json();",
											"   //laço comando .each",
											"    _.each(jsonData, (item) => { //verificando se todos os retornos tem os campos abaixo",
											"        pm.expect(item).to.have.property(\"id\");",
											"        pm.expect(item).to.have.property(\"post_id\");",
											"        pm.expect(item).to.have.property(\"name\");",
											"        pm.expect(item).to.have.property(\"email\");",
											"        pm.expect(item).to.have.property(\"body\");",
											"    })",
											"        //usar valores do retorno em outro teste",
											"        pm.collectionVariables.set(\"v1_id\", jsonData[1].id);",
											"        pm.collectionVariables.set(\"v2_name\", jsonData[1].name);",
											"        pm.collectionVariables.set(\"v3_email\", jsonData[1].email);",
											"        pm.collectionVariables.set(\"v4_gender\", jsonData[1].gender);",
											"        pm.collectionVariables.set(\"v5_status\", jsonData[1].status);",
											"",
											"});",
											"*/",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/comments?email={{v4_email}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"comments"
									],
									"query": [
										{
											"key": "id",
											"value": "{{v1_id}}",
											"disabled": true
										},
										{
											"key": "post_id",
											"value": "{{v2_post_id}}",
											"disabled": true
										},
										{
											"key": "name",
											"value": "{{v3_name}}",
											"disabled": true
										},
										{
											"key": "email",
											"value": "{{v4_email}}"
										},
										{
											"key": "body",
											"value": "{{v5_body}}",
											"disabled": true
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT008- Buscar comments por id, post_id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											"",
											"pm.test(\"Body response\", function (){ ",
											"    var jsonData = pm.response.json();",
											"   //laço comando .each",
											"    _.each(jsonData, (item) => { //verificando se todos os retornos tem os campos abaixo",
											"        pm.expect(item).to.have.property(\"id\");",
											"        pm.expect(item).to.have.property(\"post_id\");",
											"        pm.expect(item).to.have.property(\"name\");",
											"        pm.expect(item).to.have.property(\"email\");",
											"        pm.expect(item).to.have.property(\"body\");",
											"    })",
											"        //usar valores do retorno em outro teste",
											"        pm.collectionVariables.set(\"v1_id\", jsonData[1].id);",
											"        pm.collectionVariables.set(\"v2_name\", jsonData[1].name);",
											"        pm.collectionVariables.set(\"v3_email\", jsonData[1].email);",
											"        pm.collectionVariables.set(\"v4_gender\", jsonData[1].gender);",
											"        pm.collectionVariables.set(\"v5_status\", jsonData[1].status);",
											"",
											"});",
											"*/",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/comments?id={{v1_id}}&post_id={{v2_post_id}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"comments"
									],
									"query": [
										{
											"key": "id",
											"value": "{{v1_id}}"
										},
										{
											"key": "post_id",
											"value": "{{v2_post_id}}"
										},
										{
											"key": "name",
											"value": "{{v3_name}}",
											"disabled": true
										},
										{
											"key": "email",
											"value": "{{v4_email}}",
											"disabled": true
										},
										{
											"key": "body",
											"value": "{{v5_body}}",
											"disabled": true
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT009- Buscar comments por id, name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											"",
											"pm.test(\"Body response\", function (){ ",
											"    var jsonData = pm.response.json();",
											"   //laço comando .each",
											"    _.each(jsonData, (item) => { //verificando se todos os retornos tem os campos abaixo",
											"        pm.expect(item).to.have.property(\"id\");",
											"        pm.expect(item).to.have.property(\"post_id\");",
											"        pm.expect(item).to.have.property(\"name\");",
											"        pm.expect(item).to.have.property(\"email\");",
											"        pm.expect(item).to.have.property(\"body\");",
											"    })",
											"        //usar valores do retorno em outro teste",
											"        pm.collectionVariables.set(\"v1_id\", jsonData[1].id);",
											"        pm.collectionVariables.set(\"v2_name\", jsonData[1].name);",
											"        pm.collectionVariables.set(\"v3_email\", jsonData[1].email);",
											"        pm.collectionVariables.set(\"v4_gender\", jsonData[1].gender);",
											"        pm.collectionVariables.set(\"v5_status\", jsonData[1].status);",
											"",
											"});",
											"*/",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/comments?post_id={{v2_post_id}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"comments"
									],
									"query": [
										{
											"key": "id",
											"value": "{{v1_id}}",
											"disabled": true
										},
										{
											"key": "post_id",
											"value": "{{v2_post_id}}"
										},
										{
											"key": "name",
											"value": "{{v3_name}}",
											"disabled": true
										},
										{
											"key": "email",
											"value": "{{v4_email}}",
											"disabled": true
										},
										{
											"key": "body",
											"value": "{{v5_body}}",
											"disabled": true
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT010- Buscar comments por id, email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											"",
											"pm.test(\"Body response\", function (){ ",
											"    var jsonData = pm.response.json();",
											"   //laço comando .each",
											"    _.each(jsonData, (item) => { //verificando se todos os retornos tem os campos abaixo",
											"        pm.expect(item).to.have.property(\"id\");",
											"        pm.expect(item).to.have.property(\"post_id\");",
											"        pm.expect(item).to.have.property(\"name\");",
											"        pm.expect(item).to.have.property(\"email\");",
											"        pm.expect(item).to.have.property(\"body\");",
											"    })",
											"        //usar valores do retorno em outro teste",
											"        pm.collectionVariables.set(\"v1_id\", jsonData[1].id);",
											"        pm.collectionVariables.set(\"v2_name\", jsonData[1].name);",
											"        pm.collectionVariables.set(\"v3_email\", jsonData[1].email);",
											"        pm.collectionVariables.set(\"v4_gender\", jsonData[1].gender);",
											"        pm.collectionVariables.set(\"v5_status\", jsonData[1].status);",
											"",
											"});",
											"*/",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/comments?id={{v1_id}}&email={{v4_email}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"comments"
									],
									"query": [
										{
											"key": "id",
											"value": "{{v1_id}}"
										},
										{
											"key": "post_id",
											"value": "{{v2_post_id}}",
											"disabled": true
										},
										{
											"key": "name",
											"value": "{{v3_name}}",
											"disabled": true
										},
										{
											"key": "email",
											"value": "{{v4_email}}"
										},
										{
											"key": "body",
											"value": "{{v5_body}}",
											"disabled": true
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT011- Buscar comments por id, body",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											"",
											"pm.test(\"Body response\", function (){ ",
											"    var jsonData = pm.response.json();",
											"   //laço comando .each",
											"    _.each(jsonData, (item) => { //verificando se todos os retornos tem os campos abaixo",
											"        pm.expect(item).to.have.property(\"id\");",
											"        pm.expect(item).to.have.property(\"post_id\");",
											"        pm.expect(item).to.have.property(\"name\");",
											"        pm.expect(item).to.have.property(\"email\");",
											"        pm.expect(item).to.have.property(\"body\");",
											"    })",
											"        //usar valores do retorno em outro teste",
											"        pm.collectionVariables.set(\"v1_id\", jsonData[1].id);",
											"        pm.collectionVariables.set(\"v2_name\", jsonData[1].name);",
											"        pm.collectionVariables.set(\"v3_email\", jsonData[1].email);",
											"        pm.collectionVariables.set(\"v4_gender\", jsonData[1].gender);",
											"        pm.collectionVariables.set(\"v5_status\", jsonData[1].status);",
											"",
											"});",
											"*/",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/comments?id={{v1_id}}&email={{v4_email}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"comments"
									],
									"query": [
										{
											"key": "id",
											"value": "{{v1_id}}"
										},
										{
											"key": "post_id",
											"value": "{{v2_post_id}}",
											"disabled": true
										},
										{
											"key": "name",
											"value": "{{v3_name}}",
											"disabled": true
										},
										{
											"key": "email",
											"value": "{{v4_email}}"
										},
										{
											"key": "body",
											"value": "{{v5_body}}",
											"disabled": true
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT012- Buscar comments por post_id, name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											"",
											"pm.test(\"Body response\", function (){ ",
											"    var jsonData = pm.response.json();",
											"   //laço comando .each",
											"    _.each(jsonData, (item) => { //verificando se todos os retornos tem os campos abaixo",
											"        pm.expect(item).to.have.property(\"id\");",
											"        pm.expect(item).to.have.property(\"post_id\");",
											"        pm.expect(item).to.have.property(\"name\");",
											"        pm.expect(item).to.have.property(\"email\");",
											"        pm.expect(item).to.have.property(\"body\");",
											"    })",
											"        //usar valores do retorno em outro teste",
											"        pm.collectionVariables.set(\"v1_id\", jsonData[1].id);",
											"        pm.collectionVariables.set(\"v2_name\", jsonData[1].name);",
											"        pm.collectionVariables.set(\"v3_email\", jsonData[1].email);",
											"        pm.collectionVariables.set(\"v4_gender\", jsonData[1].gender);",
											"        pm.collectionVariables.set(\"v5_status\", jsonData[1].status);",
											"",
											"});",
											"*/",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/comments?post_id={{v2_post_id}}&name={{v3_name}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"comments"
									],
									"query": [
										{
											"key": "id",
											"value": "{{v1_id}}",
											"disabled": true
										},
										{
											"key": "post_id",
											"value": "{{v2_post_id}}"
										},
										{
											"key": "name",
											"value": "{{v3_name}}"
										},
										{
											"key": "email",
											"value": "{{v4_email}}",
											"disabled": true
										},
										{
											"key": "body",
											"value": "{{v5_body}}",
											"disabled": true
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT013- Buscar comments por post_id, email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											"",
											"pm.test(\"Body response\", function (){ ",
											"    var jsonData = pm.response.json();",
											"   //laço comando .each",
											"    _.each(jsonData, (item) => { //verificando se todos os retornos tem os campos abaixo",
											"        pm.expect(item).to.have.property(\"id\");",
											"        pm.expect(item).to.have.property(\"post_id\");",
											"        pm.expect(item).to.have.property(\"name\");",
											"        pm.expect(item).to.have.property(\"email\");",
											"        pm.expect(item).to.have.property(\"body\");",
											"    })",
											"        //usar valores do retorno em outro teste",
											"        pm.collectionVariables.set(\"v1_id\", jsonData[1].id);",
											"        pm.collectionVariables.set(\"v2_name\", jsonData[1].name);",
											"        pm.collectionVariables.set(\"v3_email\", jsonData[1].email);",
											"        pm.collectionVariables.set(\"v4_gender\", jsonData[1].gender);",
											"        pm.collectionVariables.set(\"v5_status\", jsonData[1].status);",
											"",
											"});",
											"*/",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/comments?post_id={{v2_post_id}}&email={{v4_email}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"comments"
									],
									"query": [
										{
											"key": "id",
											"value": "{{v1_id}}",
											"disabled": true
										},
										{
											"key": "post_id",
											"value": "{{v2_post_id}}"
										},
										{
											"key": "name",
											"value": "{{v3_name}}",
											"disabled": true
										},
										{
											"key": "email",
											"value": "{{v4_email}}"
										},
										{
											"key": "body",
											"value": "{{v5_body}}",
											"disabled": true
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT014- Buscar comments por post_id, body",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											"",
											"pm.test(\"Body response\", function (){ ",
											"    var jsonData = pm.response.json();",
											"   //laço comando .each",
											"    _.each(jsonData, (item) => { //verificando se todos os retornos tem os campos abaixo",
											"        pm.expect(item).to.have.property(\"id\");",
											"        pm.expect(item).to.have.property(\"post_id\");",
											"        pm.expect(item).to.have.property(\"name\");",
											"        pm.expect(item).to.have.property(\"email\");",
											"        pm.expect(item).to.have.property(\"body\");",
											"    })",
											"        //usar valores do retorno em outro teste",
											"        pm.collectionVariables.set(\"v1_id\", jsonData[1].id);",
											"        pm.collectionVariables.set(\"v2_name\", jsonData[1].name);",
											"        pm.collectionVariables.set(\"v3_email\", jsonData[1].email);",
											"        pm.collectionVariables.set(\"v4_gender\", jsonData[1].gender);",
											"        pm.collectionVariables.set(\"v5_status\", jsonData[1].status);",
											"",
											"});",
											"*/",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/comments?post_id={{v2_post_id}}&body={{v5_body}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"comments"
									],
									"query": [
										{
											"key": "id",
											"value": "{{v1_id}}",
											"disabled": true
										},
										{
											"key": "post_id",
											"value": "{{v2_post_id}}"
										},
										{
											"key": "name",
											"value": "{{v3_name}}",
											"disabled": true
										},
										{
											"key": "email",
											"value": "{{v4_email}}",
											"disabled": true
										},
										{
											"key": "body",
											"value": "{{v5_body}}"
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT015- Buscar comments por name, email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											"",
											"pm.test(\"Body response\", function (){ ",
											"    var jsonData = pm.response.json();",
											"   //laço comando .each",
											"    _.each(jsonData, (item) => { //verificando se todos os retornos tem os campos abaixo",
											"        pm.expect(item).to.have.property(\"id\");",
											"        pm.expect(item).to.have.property(\"post_id\");",
											"        pm.expect(item).to.have.property(\"name\");",
											"        pm.expect(item).to.have.property(\"email\");",
											"        pm.expect(item).to.have.property(\"body\");",
											"    })",
											"        //usar valores do retorno em outro teste",
											"        pm.collectionVariables.set(\"v1_id\", jsonData[1].id);",
											"        pm.collectionVariables.set(\"v2_name\", jsonData[1].name);",
											"        pm.collectionVariables.set(\"v3_email\", jsonData[1].email);",
											"        pm.collectionVariables.set(\"v4_gender\", jsonData[1].gender);",
											"        pm.collectionVariables.set(\"v5_status\", jsonData[1].status);",
											"",
											"});",
											"*/",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/comments?name={{v3_name}}&email={{v4_email}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"comments"
									],
									"query": [
										{
											"key": "id",
											"value": "{{v1_id}}",
											"disabled": true
										},
										{
											"key": "post_id",
											"value": "{{v2_post_id}}",
											"disabled": true
										},
										{
											"key": "name",
											"value": "{{v3_name}}"
										},
										{
											"key": "email",
											"value": "{{v4_email}}"
										},
										{
											"key": "body",
											"value": "{{v5_body}}",
											"disabled": true
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT016- Buscar comments  por name, body",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											"",
											"pm.test(\"Body response\", function (){ ",
											"    var jsonData = pm.response.json();",
											"   //laço comando .each",
											"    _.each(jsonData, (item) => { //verificando se todos os retornos tem os campos abaixo",
											"        pm.expect(item).to.have.property(\"id\");",
											"        pm.expect(item).to.have.property(\"post_id\");",
											"        pm.expect(item).to.have.property(\"name\");",
											"        pm.expect(item).to.have.property(\"email\");",
											"        pm.expect(item).to.have.property(\"body\");",
											"    })",
											"        //usar valores do retorno em outro teste",
											"        pm.collectionVariables.set(\"v1_id\", jsonData[1].id);",
											"        pm.collectionVariables.set(\"v2_name\", jsonData[1].name);",
											"        pm.collectionVariables.set(\"v3_email\", jsonData[1].email);",
											"        pm.collectionVariables.set(\"v4_gender\", jsonData[1].gender);",
											"        pm.collectionVariables.set(\"v5_status\", jsonData[1].status);",
											"",
											"});",
											"*/",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/comments?name={{v3_name}}&body={{v5_body}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"comments"
									],
									"query": [
										{
											"key": "id",
											"value": "{{v1_id}}",
											"disabled": true
										},
										{
											"key": "post_id",
											"value": "{{v2_post_id}}",
											"disabled": true
										},
										{
											"key": "name",
											"value": "{{v3_name}}"
										},
										{
											"key": "email",
											"value": "{{v4_email}}",
											"disabled": true
										},
										{
											"key": "body",
											"value": "{{v5_body}}"
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT017- Buscar comments por email, body",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											"",
											"pm.test(\"Body response\", function (){ ",
											"    var jsonData = pm.response.json();",
											"   //laço comando .each",
											"    _.each(jsonData, (item) => { //verificando se todos os retornos tem os campos abaixo",
											"        pm.expect(item).to.have.property(\"id\");",
											"        pm.expect(item).to.have.property(\"post_id\");",
											"        pm.expect(item).to.have.property(\"name\");",
											"        pm.expect(item).to.have.property(\"email\");",
											"        pm.expect(item).to.have.property(\"body\");",
											"    })",
											"        //usar valores do retorno em outro teste",
											"        pm.collectionVariables.set(\"v1_id\", jsonData[1].id);",
											"        pm.collectionVariables.set(\"v2_name\", jsonData[1].name);",
											"        pm.collectionVariables.set(\"v3_email\", jsonData[1].email);",
											"        pm.collectionVariables.set(\"v4_gender\", jsonData[1].gender);",
											"        pm.collectionVariables.set(\"v5_status\", jsonData[1].status);",
											"",
											"});",
											"*/",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/comments?name={{v3_name}}&body={{v5_body}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"comments"
									],
									"query": [
										{
											"key": "id",
											"value": "{{v1_id}}",
											"disabled": true
										},
										{
											"key": "post_id",
											"value": "{{v2_post_id}}",
											"disabled": true
										},
										{
											"key": "name",
											"value": "{{v3_name}}"
										},
										{
											"key": "email",
											"value": "{{v4_email}}",
											"disabled": true
										},
										{
											"key": "body",
											"value": "{{v5_body}}"
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT018- Buscar um comments por um id inválido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											"",
											"pm.test(\"Body response\", function (){ ",
											"    var jsonData = pm.response.json();",
											"   //laço comando .each",
											"    _.each(jsonData, (item) => { //verificando se todos os retornos tem os campos abaixo",
											"        pm.expect(item).to.have.property(\"id\");",
											"        pm.expect(item).to.have.property(\"post_id\");",
											"        pm.expect(item).to.have.property(\"name\");",
											"        pm.expect(item).to.have.property(\"email\");",
											"        pm.expect(item).to.have.property(\"body\");",
											"    })",
											"        //usar valores do retorno em outro teste",
											"        pm.collectionVariables.set(\"v1_id\", jsonData[1].id);",
											"        pm.collectionVariables.set(\"v2_name\", jsonData[1].name);",
											"        pm.collectionVariables.set(\"v3_email\", jsonData[1].email);",
											"        pm.collectionVariables.set(\"v4_gender\", jsonData[1].gender);",
											"        pm.collectionVariables.set(\"v5_status\", jsonData[1].status);",
											"",
											"});",
											"*/",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/comments/9999",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"comments",
										"9999"
									],
									"query": [
										{
											"key": "id",
											"value": "{{v1_id}}",
											"disabled": true
										},
										{
											"key": "post_id",
											"value": "{{v2_post_id}}",
											"disabled": true
										},
										{
											"key": "name",
											"value": "{{v3_name}}",
											"disabled": true
										},
										{
											"key": "email",
											"value": "{{v4_email}}",
											"disabled": true
										},
										{
											"key": "body",
											"value": "{{v5_body}}",
											"disabled": true
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT019- Buscar comments por um post_id inválido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											"",
											"pm.test(\"Body response\", function (){ ",
											"    var jsonData = pm.response.json();",
											"   //laço comando .each",
											"    _.each(jsonData, (item) => { //verificando se todos os retornos tem os campos abaixo",
											"        pm.expect(item).to.have.property(\"id\");",
											"        pm.expect(item).to.have.property(\"post_id\");",
											"        pm.expect(item).to.have.property(\"name\");",
											"        pm.expect(item).to.have.property(\"email\");",
											"        pm.expect(item).to.have.property(\"body\");",
											"    })",
											"        //usar valores do retorno em outro teste",
											"        pm.collectionVariables.set(\"v1_id\", jsonData[1].id);",
											"        pm.collectionVariables.set(\"v2_name\", jsonData[1].name);",
											"        pm.collectionVariables.set(\"v3_email\", jsonData[1].email);",
											"        pm.collectionVariables.set(\"v4_gender\", jsonData[1].gender);",
											"        pm.collectionVariables.set(\"v5_status\", jsonData[1].status);",
											"",
											"});",
											"*/",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/comments/?post_id=99999",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"comments",
										""
									],
									"query": [
										{
											"key": "id",
											"value": "{{v1_id}}",
											"disabled": true
										},
										{
											"key": "post_id",
											"value": "99999"
										},
										{
											"key": "name",
											"value": "{{v3_name}}",
											"disabled": true
										},
										{
											"key": "email",
											"value": "{{v4_email}}",
											"disabled": true
										},
										{
											"key": "body",
											"value": "{{v5_body}}",
											"disabled": true
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT020- Buscar comments por um name inválido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											"",
											"pm.test(\"Body response\", function (){ ",
											"    var jsonData = pm.response.json();",
											"   //laço comando .each",
											"    _.each(jsonData, (item) => { //verificando se todos os retornos tem os campos abaixo",
											"        pm.expect(item).to.have.property(\"id\");",
											"        pm.expect(item).to.have.property(\"post_id\");",
											"        pm.expect(item).to.have.property(\"name\");",
											"        pm.expect(item).to.have.property(\"email\");",
											"        pm.expect(item).to.have.property(\"body\");",
											"    })",
											"        //usar valores do retorno em outro teste",
											"        pm.collectionVariables.set(\"v1_id\", jsonData[1].id);",
											"        pm.collectionVariables.set(\"v2_name\", jsonData[1].name);",
											"        pm.collectionVariables.set(\"v3_email\", jsonData[1].email);",
											"        pm.collectionVariables.set(\"v4_gender\", jsonData[1].gender);",
											"        pm.collectionVariables.set(\"v5_status\", jsonData[1].status);",
											"",
											"});",
											"*/",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/comments/",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"comments",
										""
									],
									"query": [
										{
											"key": "id",
											"value": "{{v1_id}}",
											"disabled": true
										},
										{
											"key": "post_id",
											"value": "{{v2_post_id}}",
											"disabled": true
										},
										{
											"key": "name",
											"value": "alex rocha",
											"disabled": true
										},
										{
											"key": "email",
											"value": "{{v4_email}}",
											"disabled": true
										},
										{
											"key": "body",
											"value": "{{v5_body}}",
											"disabled": true
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT021- Buscar comments por um email inválido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											"",
											"pm.test(\"Body response\", function (){ ",
											"    var jsonData = pm.response.json();",
											"   //laço comando .each",
											"    _.each(jsonData, (item) => { //verificando se todos os retornos tem os campos abaixo",
											"        pm.expect(item).to.have.property(\"id\");",
											"        pm.expect(item).to.have.property(\"post_id\");",
											"        pm.expect(item).to.have.property(\"name\");",
											"        pm.expect(item).to.have.property(\"email\");",
											"        pm.expect(item).to.have.property(\"body\");",
											"    })",
											"        //usar valores do retorno em outro teste",
											"        pm.collectionVariables.set(\"v1_id\", jsonData[1].id);",
											"        pm.collectionVariables.set(\"v2_name\", jsonData[1].name);",
											"        pm.collectionVariables.set(\"v3_email\", jsonData[1].email);",
											"        pm.collectionVariables.set(\"v4_gender\", jsonData[1].gender);",
											"        pm.collectionVariables.set(\"v5_status\", jsonData[1].status);",
											"",
											"});",
											"*/",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/comments/?email=teste@teste.com.br",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"comments",
										""
									],
									"query": [
										{
											"key": "id",
											"value": "{{v1_id}}",
											"disabled": true
										},
										{
											"key": "post_id",
											"value": "{{v2_post_id}}",
											"disabled": true
										},
										{
											"key": "name",
											"value": "{{v3_name}}",
											"disabled": true
										},
										{
											"key": "email",
											"value": "teste@teste.com.br"
										},
										{
											"key": "body",
											"value": "{{v5_body}}",
											"disabled": true
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT022- Buscar comments por um body inválido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											"",
											"pm.test(\"Body response\", function (){ ",
											"    var jsonData = pm.response.json();",
											"   //laço comando .each",
											"    _.each(jsonData, (item) => { //verificando se todos os retornos tem os campos abaixo",
											"        pm.expect(item).to.have.property(\"id\");",
											"        pm.expect(item).to.have.property(\"post_id\");",
											"        pm.expect(item).to.have.property(\"name\");",
											"        pm.expect(item).to.have.property(\"email\");",
											"        pm.expect(item).to.have.property(\"body\");",
											"    })",
											"        //usar valores do retorno em outro teste",
											"        pm.collectionVariables.set(\"v1_id\", jsonData[1].id);",
											"        pm.collectionVariables.set(\"v2_name\", jsonData[1].name);",
											"        pm.collectionVariables.set(\"v3_email\", jsonData[1].email);",
											"        pm.collectionVariables.set(\"v4_gender\", jsonData[1].gender);",
											"        pm.collectionVariables.set(\"v5_status\", jsonData[1].status);",
											"",
											"});",
											"*/",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/comments/?body=teste",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"comments",
										""
									],
									"query": [
										{
											"key": "id",
											"value": "{{v1_id}}",
											"disabled": true
										},
										{
											"key": "post_id",
											"value": "{{v2_post_id}}",
											"disabled": true
										},
										{
											"key": "name",
											"value": "{{v3_name}}",
											"disabled": true
										},
										{
											"key": "email",
											"value": "{{v4_email}}",
											"disabled": true
										},
										{
											"key": "body",
											"value": "teste"
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						}
					]
				},
				{
					"name": "Get todos",
					"item": [
						{
							"name": "CT001-Buscar todos os todos ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											"",
											"pm.test(\"Body response\", function (){ ",
											"    var jsonData = pm.response.json();",
											"   //laço comando .each",
											"    _.each(jsonData, (item) => { ",
											"        //verificando se todos os retornos tem os campos abaixo",
											"        pm.expect(item).to.have.property(\"id\");",
											"        pm.expect(item).to.have.property(\"user_id\");",
											"        pm.expect(item).to.have.property(\"title\");",
											"        pm.expect(item).to.have.property(\"due_on\");",
											"        pm.expect(item).to.have.property(\"status\");",
											"    })",
											"        //usar valores do retorno em outro teste",
											"        pm.collectionVariables.set(\"V-id\", jsonData[1].id);",
											"        pm.collectionVariables.set(\"V-user_id\", jsonData[1].user_id);",
											"        pm.collectionVariables.set(\"V-title\", jsonData[1].title);",
											"        pm.collectionVariables.set(\"V-due_on\", jsonData[1].due_on);",
											"        pm.collectionVariables.set(\"V-status\", jsonData[1].status);",
											"",
											"});",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/todos",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"todos"
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT002-Filtra um todos específico id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/todos/?id={{V-id}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"todos",
										""
									],
									"query": [
										{
											"key": "id",
											"value": "{{V-id}}"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT003-Filtra um todos específico user_id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/todos/?user_id={{V-user_id}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"todos",
										""
									],
									"query": [
										{
											"key": "user_id",
											"value": "{{V-user_id}}"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT004-Filtra um todos específico title",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/todos/?title={{V-title}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"todos",
										""
									],
									"query": [
										{
											"key": "title",
											"value": "{{V-title}}"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT005-Filtra um todos específico due_on",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/todos/?due_on={{V-due_on}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"todos",
										""
									],
									"query": [
										{
											"key": "due_on",
											"value": "{{V-due_on}}"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT006-Filtra um todos específico status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/todos/?status={{V-status}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"todos",
										""
									],
									"query": [
										{
											"key": "status",
											"value": "{{V-status}}"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT007-Filtra um todos específico id, user_id, title, due_on e status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/todos/?status={{V-status}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"todos",
										""
									],
									"query": [
										{
											"key": "status",
											"value": "{{V-status}}"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT008-Filtra um todos específico id e user_id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/todos/?id={{V-id}}&user_id={{V-user_id}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"todos",
										""
									],
									"query": [
										{
											"key": "id",
											"value": "{{V-id}}"
										},
										{
											"key": "user_id",
											"value": "{{V-user_id}}"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT009-Filtra um todos específico id e title",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/todos/?id={{V-id}}&title={{V-title}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"todos",
										""
									],
									"query": [
										{
											"key": "id",
											"value": "{{V-id}}"
										},
										{
											"key": "title",
											"value": "{{V-title}}"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT010-Filtra um todos específico id e due_on",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/todos/?id={{V-id}}&due_on={{V-due_on}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"todos",
										""
									],
									"query": [
										{
											"key": "id",
											"value": "{{V-id}}"
										},
										{
											"key": "due_on",
											"value": "{{V-due_on}}"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT011-Filtra um todos específico id e status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/todos/?id={{V-id}}&status={{V-status}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"todos",
										""
									],
									"query": [
										{
											"key": "id",
											"value": "{{V-id}}"
										},
										{
											"key": "status",
											"value": "{{V-status}}"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT012-Filtra um todos específico user_id e title",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/todos/?user_id={{V-user_id}}&title={{V-title}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"todos",
										""
									],
									"query": [
										{
											"key": "user_id",
											"value": "{{V-user_id}}"
										},
										{
											"key": "title",
											"value": "{{V-title}}"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT013-Filtra um todos específico user_id e due_on",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/todos/?user_id={{V-user_id}}&due_on={{V-due_on}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"todos",
										""
									],
									"query": [
										{
											"key": "user_id",
											"value": "{{V-user_id}}"
										},
										{
											"key": "due_on",
											"value": "{{V-due_on}}"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT014-Filtra um todos específico user_id e status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/todos/?user_id={{V-user_id}}&status={{V-status}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"todos",
										""
									],
									"query": [
										{
											"key": "user_id",
											"value": "{{V-user_id}}"
										},
										{
											"key": "status",
											"value": "{{V-status}}"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT015-Filtra um todos específico title e due_on",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/todos/?title={{V-title}}&due_on={{V-due_on}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"todos",
										""
									],
									"query": [
										{
											"key": "title",
											"value": "{{V-title}}"
										},
										{
											"key": "due_on",
											"value": "{{V-due_on}}"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT016-Filtra um todos específico title e status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/todos/?title={{V-title}}&status={{V-status}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"todos",
										""
									],
									"query": [
										{
											"key": "title",
											"value": "{{V-title}}"
										},
										{
											"key": "status",
											"value": "{{V-status}}"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT017-Filtra um todos específico due_on e status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/todos/?due_on={{V-due_on}}&status={{V-status}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"todos",
										""
									],
									"query": [
										{
											"key": "due_on",
											"value": "{{V-due_on}}"
										},
										{
											"key": "status",
											"value": "{{V-status}}"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT018-Filtra um todos por um id inválido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/todos/7878787",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"todos",
										"7878787"
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT019-Filtra um todos por um user_id inválido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											"/*",
											"pm.test(\"Body response\", function (){ ",
											"    var jsonData = pm.response.json();",
											"   //laço comando .each",
											"    _.each(jsonData, (item) => { ",
											"        //verificando se todos os retornos tem os campos abaixo",
											"        pm.expect(item).to.have.property(\"id\");",
											"        pm.expect(item).to.have.property(\"user_id\");",
											"        pm.expect(item).to.have.property(\"title\");",
											"        pm.expect(item).to.have.property(\"due_on\");",
											"        pm.expect(item).to.have.property(\"status\");",
											"    })",
											"        //usar valores do retorno em outro teste",
											"        pm.collectionVariables.set(\"V_id\", jsonData[1].id);",
											"        pm.collectionVariables.set(\"V_user_id\", jsonData[1].user_id);",
											"        pm.collectionVariables.set(\"V_title\", jsonData[1].title);",
											"        pm.collectionVariables.set(\"V_due_on\", jsonData[1].due_on);",
											"        pm.collectionVariables.set(\"V_status\", jsonData[1].status);",
											"",
											"});",
											"*/"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/todos/?user_id=9999999",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"todos",
										""
									],
									"query": [
										{
											"key": "id",
											"value": "{{V-id}}",
											"disabled": true
										},
										{
											"key": "user_id",
											"value": "9999999"
										},
										{
											"key": "title",
											"value": "{{V-title}}",
											"disabled": true
										},
										{
											"key": "due_on",
											"value": "{{V-due_on}}",
											"disabled": true
										},
										{
											"key": "status",
											"value": "{{V-status}}",
											"disabled": true
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT020-Filtra um todos por um title inválido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/todos/?title=teste",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"todos",
										""
									],
									"query": [
										{
											"key": "title",
											"value": "teste"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT021-Filtra um todos por um due_on inválido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/todos/?due_on={{V-due_on}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"todos",
										""
									],
									"query": [
										{
											"key": "due_on",
											"value": "{{V-due_on}}"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT022-Filtra um todos por um status inválido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/todos/?status=teste",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"todos",
										""
									],
									"query": [
										{
											"key": "status",
											"value": "teste"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						}
					]
				},
				{
					"name": "GET users/posts",
					"item": [
						{
							"name": "CT001-Buscar users/post de um usuário",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											"",
											"pm.test(\"Body response\", function (){ ",
											"    var jsonData = pm.response.json();",
											"   //laço comando .each",
											"    _.each(jsonData, (item) => { ",
											"        //verificando se todos os retornos tem os campos abaixo",
											"        pm.expect(item).to.have.property(\"id\");",
											"        pm.expect(item).to.have.property(\"user_id\");",
											"        pm.expect(item).to.have.property(\"title\");",
											"        pm.expect(item).to.have.property(\"body\");",
											"    })",
											"    ",
											"     //usar valores do retorno em outro teste",
											"      pm.collectionVariables.set(\"vp_id\", jsonData[1].id);",
											"      pm.collectionVariables.set(\"vp_user_id\", jsonData[1].user_id);",
											"      pm.collectionVariables.set(\"vp_title\", jsonData[1].title);",
											"      pm.collectionVariables.set(\"vp_body\", jsonData[1].body);        ",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/posts",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"posts"
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT002-Buscar users/post de um user_id especifico",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/users/{{vp_user_id}}/posts",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"users",
										"{{vp_user_id}}",
										"posts"
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": null,
											"disabled": true
										},
										{
											"key": "",
											"value": null,
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "CT003-Buscar users/post de um user_id, id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/users/{{vp_user_id}}/posts/?id={{vp_id}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"users",
										"{{vp_user_id}}",
										"posts",
										""
									],
									"query": [
										{
											"key": "id",
											"value": "{{vp_id}}"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": null,
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "CT004-Buscar users/post de um user_id, title",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/users/{{vp_user_id}}/posts?title={{vp_title}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"users",
										"{{vp_user_id}}",
										"posts"
									],
									"query": [
										{
											"key": "title",
											"value": "{{vp_title}}"
										},
										{
											"key": "",
											"value": null,
											"disabled": true
										},
										{
											"key": "",
											"value": null,
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "CT005-Buscar users/post de um user_id, body",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/users/{{vp_user_id}}/posts?body={{vp_body}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"users",
										"{{vp_user_id}}",
										"posts"
									],
									"query": [
										{
											"key": "body",
											"value": "{{vp_body}}"
										},
										{
											"key": "",
											"value": null,
											"disabled": true
										},
										{
											"key": "",
											"value": null,
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "CT006-Buscar users/post de um user_id, id, body, title",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/users/{{vp_user_id}}/posts?body={{vp_body}}&id={{vp_id}}&title={{vp_title}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"users",
										"{{vp_user_id}}",
										"posts"
									],
									"query": [
										{
											"key": "body",
											"value": "{{vp_body}}"
										},
										{
											"key": "id",
											"value": "{{vp_id}}"
										},
										{
											"key": "title",
											"value": "{{vp_title}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "CT007-Buscar users/post de um user_id inexistente",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/users/999/posts",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"users",
										"999",
										"posts"
									],
									"query": [
										{
											"key": "",
											"value": null,
											"disabled": true
										},
										{
											"key": "",
											"value": null,
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "CT008-Buscar users/post de um body inexistente",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/users/{{vp_user_id}}/posts?body=teste teste",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"users",
										"{{vp_user_id}}",
										"posts"
									],
									"query": [
										{
											"key": "body",
											"value": "teste teste"
										},
										{
											"key": "",
											"value": null,
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "CT009-Buscar users/post de um title inexistente",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/users/{{vp_user_id}}/posts?title=teste teste",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"users",
										"{{vp_user_id}}",
										"posts"
									],
									"query": [
										{
											"key": "title",
											"value": "teste teste"
										},
										{
											"key": "",
											"value": null,
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "CT010-Buscar users/post de um id inexistente",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/users/{{vp_user_id}}/posts/?id=123456",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"users",
										"{{vp_user_id}}",
										"posts",
										""
									],
									"query": [
										{
											"key": "id",
											"value": "123456"
										},
										{
											"key": "",
											"value": null,
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "GET posts/comments",
					"item": [
						{
							"name": "CT001-Buscar todos os comentários de um post",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(50000);",
											"});",
											"pm.test(\"Body response\", function (){ ",
											"    var jsonData = pm.response.json();",
											"   //laço comando .each",
											"    _.each(jsonData, (item) => { ",
											"        //verificando se todos os retornos tem os campos abaixo",
											"        pm.expect(item).to.have.property(\"id\");",
											"        pm.expect(item).to.have.property(\"post_id\");",
											"        pm.expect(item).to.have.property(\"name\");",
											"        pm.expect(item).to.have.property(\"email\");",
											"        pm.expect(item).to.have.property(\"body\");",
											"    })",
											"        //usar valores do retorno em outro teste",
											"        pm.collectionVariables.set(\"vc_id\", jsonData[1].id);",
											"        pm.collectionVariables.set(\"vc_post_id\", jsonData[1].post_id);",
											"        pm.collectionVariables.set(\"vc_name\", jsonData[1].name);",
											"        pm.collectionVariables.set(\"vc_email\", jsonData[1].email);",
											"        pm.collectionVariables.set(\"vc_body\", jsonData[1].body);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/comments",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"comments"
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT002-Buscar um comments específico id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/posts/{{vc_id}}/comments",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"posts",
										"{{vc_id}}",
										"comments"
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT003-Buscar um comments post_id específico",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/posts/{{vc_id}}/comments?post_id={{vc_post_id}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"posts",
										"{{vc_id}}",
										"comments"
									],
									"query": [
										{
											"key": "post_id",
											"value": "{{vc_post_id}}"
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT004-Buscar um comments por name especifico ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/posts/{{vc_post_id}}/comments?name={{vc_name}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"posts",
										"{{vc_post_id}}",
										"comments"
									],
									"query": [
										{
											"key": "name",
											"value": "{{vc_name}}"
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT005-Buscar um comments por email especifico ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/posts/{{vc_post_id}}/comments?email={{vc_email}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"posts",
										"{{vc_post_id}}",
										"comments"
									],
									"query": [
										{
											"key": "email",
											"value": "{{vc_email}}"
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT006-Buscar um comments por body especifico ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/posts/{{vc_post_id}}/comments?body={{vc_body}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"posts",
										"{{vc_post_id}}",
										"comments"
									],
									"query": [
										{
											"key": "body",
											"value": "{{vc_body}}"
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT007-Buscar comments por id, post_id, name, email, body",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/posts/{{vc_post_id}}/comments?email={{vc_email}}&body={{vc_body}}&name={{vc_name}}&id={{vc_id}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"posts",
										"{{vc_post_id}}",
										"comments"
									],
									"query": [
										{
											"key": "email",
											"value": "{{vc_email}}"
										},
										{
											"key": "body",
											"value": "{{vc_body}}"
										},
										{
											"key": "name",
											"value": "{{vc_name}}"
										},
										{
											"key": "id",
											"value": "{{vc_id}}"
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT008-Buscar comments por post_id, id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/posts/{{vc_post_id}}/comments?id={{vc_id}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"posts",
										"{{vc_post_id}}",
										"comments"
									],
									"query": [
										{
											"key": "id",
											"value": "{{vc_id}}"
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT009-Buscar comments por post_id, name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/posts/{{vc_post_id}}/comments?name={{vc_name}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"posts",
										"{{vc_post_id}}",
										"comments"
									],
									"query": [
										{
											"key": "name",
											"value": "{{vc_name}}"
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT010-Buscar comments por post_id, email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/posts/{{vc_post_id}}/comments?email={{vc_email}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"posts",
										"{{vc_post_id}}",
										"comments"
									],
									"query": [
										{
											"key": "email",
											"value": "{{vc_email}}"
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT011-Buscar comments por post_id, body",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/posts/{{vc_post_id}}/comments?body={{vc_body}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"posts",
										"{{vc_post_id}}",
										"comments"
									],
									"query": [
										{
											"key": "body",
											"value": "{{vc_body}}"
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT012-Buscar comments por name, email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/posts/{{vc_post_id}}/comments?name={{vc_name}}&email={{vc_email}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"posts",
										"{{vc_post_id}}",
										"comments"
									],
									"query": [
										{
											"key": "name",
											"value": "{{vc_name}}"
										},
										{
											"key": "email",
											"value": "{{vc_email}}"
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT013-Buscar comments  por name, body",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/posts/{{vc_post_id}}/comments?name={{vc_name}}&body={{vc_body}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"posts",
										"{{vc_post_id}}",
										"comments"
									],
									"query": [
										{
											"key": "name",
											"value": "{{vc_name}}"
										},
										{
											"key": "body",
											"value": "{{vc_body}}"
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT014-Buscar um comments por um id inválido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/posts/{{vc_post_id}}/comments?id=999999",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"posts",
										"{{vc_post_id}}",
										"comments"
									],
									"query": [
										{
											"key": "id",
											"value": "999999"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT015-Buscar comments por um post_id inválido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/posts/9999/comments",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"posts",
										"9999",
										"comments"
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT016-Buscar comments por um name inválido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/posts/9999/comments",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"posts",
										"9999",
										"comments"
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT017-Buscar comments por um email inválido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/posts/{{vc_post_id}}/comments?email=teste@teste.com.br",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"posts",
										"{{vc_post_id}}",
										"comments"
									],
									"query": [
										{
											"key": "email",
											"value": "teste@teste.com.br"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT018-Buscar comments por um body inválido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/posts/{{vc_post_id}}/comments?body=teste teste",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"posts",
										"{{vc_post_id}}",
										"comments"
									],
									"query": [
										{
											"key": "body",
											"value": "teste teste"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						}
					]
				},
				{
					"name": "GET users/todos",
					"item": [
						{
							"name": "CT001-Buscar todos os todos de um usuário",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											"",
											"pm.test(\"Body response\", function (){ ",
											"    var jsonData = pm.response.json();",
											"   //laço comando .each",
											"    _.each(jsonData, (item) => { ",
											"        //verificando se todos os retornos tem os campos abaixo",
											"        pm.expect(item).to.have.property(\"id\");",
											"        pm.expect(item).to.have.property(\"user_id\");",
											"        pm.expect(item).to.have.property(\"title\");",
											"        pm.expect(item).to.have.property(\"due_on\");",
											"        pm.expect(item).to.have.property(\"status\");",
											"    })",
											"     //usar valores do retorno em outro teste",
											"      pm.collectionVariables.set(\"va_id\", jsonData[1].id);",
											"      pm.collectionVariables.set(\"va_user_id\", jsonData[1].user_id);",
											"      pm.collectionVariables.set(\"va_title\", jsonData[1].title);",
											"      pm.collectionVariables.set(\"va_due_on\", jsonData[1].due_on);        ",
											"      pm.collectionVariables.set(\"va_status\", jsonData[1].status);        ",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/todos",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"todos"
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT002-Buscar um usuário específico - id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/users/{{va_user_id}}/todos?id={{va_id}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"users",
										"{{va_user_id}}",
										"todos"
									],
									"query": [
										{
											"key": "id",
											"value": "{{va_id}}"
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT003-Filtrar pelo user_id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/users/{{va_user_id}}/todos",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"users",
										"{{va_user_id}}",
										"todos"
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT004-Filtrar pelo title",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(50000);",
											"});",
											"",
											"pm.test(\"Body response\", function (){ ",
											"    var jsonData = pm.response.json();",
											"   //laço comando .each",
											"    _.each(jsonData, (item) => { ",
											"        //verificando se todos os retornos tem os campos abaixo",
											"        pm.expect(item).to.have.property(\"id\");",
											"        pm.expect(item).to.have.property(\"user_id\");",
											"        pm.expect(item).to.have.property(\"title\");",
											"        pm.expect(item).to.have.property(\"due_on\");",
											"        pm.expect(item).to.have.property(\"status\");",
											"    })",
											"     //usar valores do retorno em outro teste",
											"      pm.collectionVariables.set(\"va_id\", jsonData[1].id);",
											"      pm.collectionVariables.set(\"va_user_id\", jsonData[1].user_id);",
											"      pm.collectionVariables.set(\"va_title\", jsonData[1].title);",
											"      pm.collectionVariables.set(\"va_due_on\", jsonData[1].due_on);        ",
											"      pm.collectionVariables.set(\"va_status\", jsonData[1].status);        ",
											"});",
											"*/"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/users/{{va_user_id}}/todos?title={{va_title}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"users",
										"{{va_user_id}}",
										"todos"
									],
									"query": [
										{
											"key": "title",
											"value": "{{va_title}}"
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT005-Filtrar pelo due_on",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/users/{{va_user_id}}/todos?due_on={{va_due_on}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"users",
										"{{va_user_id}}",
										"todos"
									],
									"query": [
										{
											"key": "due_on",
											"value": "{{va_due_on}}"
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT006-Filtrar pela status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/users/{{va_user_id}}/todos?status={{va_status}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"users",
										"{{va_user_id}}",
										"todos"
									],
									"query": [
										{
											"key": "status",
											"value": "{{va_status}}"
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT008-Filtrar pelo user_id, inexistente",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/users/9999/todos",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"users",
										"9999",
										"todos"
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT009-Filtrar pelo id, inexistente",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/users/{{va_user_id}}/todos?id=9999",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"users",
										"{{va_user_id}}",
										"todos"
									],
									"query": [
										{
											"key": "id",
											"value": "9999"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT010-Filtrar pelo title, inexistente",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/users/{{va_user_id}}/todos?title=teste teste",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"users",
										"{{va_user_id}}",
										"todos"
									],
									"query": [
										{
											"key": "title",
											"value": "teste teste"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT011-Filtrar pelo due_on, inexistente",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/users/{{va_user_id}}/todos?due_on={{va_due_on}}",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"users",
										"{{va_user_id}}",
										"todos"
									],
									"query": [
										{
											"key": "due_on",
											"value": "{{va_due_on}}"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						},
						{
							"name": "CT012-Filtrar pelo status, inexistente",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Retorno status code is 200\", function (){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Campo Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than 5s\", function (){",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/public/v2/users/{{va_user_id}}/todos?status=teste",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"public",
										"v2",
										"users",
										"{{va_user_id}}",
										"todos"
									],
									"query": [
										{
											"key": "status",
											"value": "teste"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "A variável url_base foi adicionado direto na collection, botão direito, editar, variável"
							},
							"response": []
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "V-due_on",
			"value": ""
		},
		{
			"key": "V-id",
			"value": ""
		},
		{
			"key": "V-status",
			"value": ""
		},
		{
			"key": "V-title",
			"value": ""
		},
		{
			"key": "V-user_id",
			"value": ""
		},
		{
			"key": "vp_body",
			"value": ""
		},
		{
			"key": "vp_id",
			"value": ""
		},
		{
			"key": "vp_title",
			"value": ""
		},
		{
			"key": "vp_user_id",
			"value": ""
		},
		{
			"key": "vc_body",
			"value": ""
		},
		{
			"key": "vc_id",
			"value": ""
		},
		{
			"key": "vc_title",
			"value": ""
		},
		{
			"key": "vc_user_id",
			"value": ""
		},
		{
			"key": "vp_email",
			"value": ""
		},
		{
			"key": "vp_gender",
			"value": ""
		},
		{
			"key": "vp_name",
			"value": ""
		},
		{
			"key": "vp_status",
			"value": ""
		},
		{
			"key": "vc_email",
			"value": ""
		},
		{
			"key": "vc_name",
			"value": ""
		},
		{
			"key": "vc_post_id",
			"value": ""
		},
		{
			"key": "va_due_on",
			"value": ""
		},
		{
			"key": "va_id",
			"value": ""
		},
		{
			"key": "va_status",
			"value": ""
		},
		{
			"key": "va_title",
			"value": ""
		},
		{
			"key": "va_user_id",
			"value": ""
		},
		{
			"key": "url_base",
			"value": "https://gorest.co.in"
		},
		{
			"key": "valor_email",
			"value": ""
		},
		{
			"key": "valor_gender",
			"value": ""
		},
		{
			"key": "valor_id",
			"value": ""
		},
		{
			"key": "valor_name",
			"value": ""
		},
		{
			"key": "valor_status",
			"value": ""
		},
		{
			"key": "v_body",
			"value": ""
		},
		{
			"key": "v_id",
			"value": ""
		},
		{
			"key": "v_title",
			"value": ""
		},
		{
			"key": "v_user_id",
			"value": ""
		},
		{
			"key": "v1_id",
			"value": ""
		},
		{
			"key": "v2_post_id",
			"value": ""
		},
		{
			"key": "v3_name",
			"value": ""
		},
		{
			"key": "v4_email",
			"value": ""
		},
		{
			"key": "v5_body",
			"value": ""
		}
	]
}